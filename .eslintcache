[{"/home/anthony/code/meal-app/react-app/src/index.js":"1","/home/anthony/code/meal-app/react-app/src/reportWebVitals.js":"2","/home/anthony/code/meal-app/react-app/src/App.js":"3","/home/anthony/code/meal-app/react-app/src/redux/reducer.js":"4","/home/anthony/code/meal-app/react-app/src/containers/UserContainer.js":"5","/home/anthony/code/meal-app/react-app/src/components/FileReader.js":"6","/home/anthony/code/meal-app/react-app/src/components/UserInput.js":"7","/home/anthony/code/meal-app/react-app/src/components/Meals/Meals.js":"8","/home/anthony/code/meal-app/react-app/src/components/Meals/Meal.js":"9","/home/anthony/code/meal-app/react-app/src/redux/actionCreator.js":"10","/home/anthony/code/meal-app/react-app/src/containers/FoodCards.js":"11","/home/anthony/code/meal-app/react-app/src/redux/foodsReducer.js":"12","/home/anthony/code/meal-app/react-app/src/components/Prediction.js":"13","/home/anthony/code/meal-app/react-app/src/components/Food/FoodCard.js":"14","/home/anthony/code/meal-app/react-app/src/components/Food/FoodPage.js":"15","/home/anthony/code/meal-app/react-app/src/redux/usersReducer.js":"16","/home/anthony/code/meal-app/react-app/src/components/Login.js":"17"},{"size":1268,"mtime":1607480122111,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607400466273,"results":"20","hashOfConfig":"19"},{"size":1994,"mtime":1608448405969,"results":"21","hashOfConfig":"19"},{"size":970,"mtime":1608452774879,"results":"22","hashOfConfig":"19"},{"size":1071,"mtime":1608450154693,"results":"23","hashOfConfig":"19"},{"size":1291,"mtime":1608244884840,"results":"24","hashOfConfig":"19"},{"size":1658,"mtime":1608452393365,"results":"25","hashOfConfig":"19"},{"size":333,"mtime":1607486177189,"results":"26","hashOfConfig":"19"},{"size":429,"mtime":1608452874017,"results":"27","hashOfConfig":"19"},{"size":2308,"mtime":1608452381102,"results":"28","hashOfConfig":"19"},{"size":838,"mtime":1608248278840,"results":"29","hashOfConfig":"19"},{"size":540,"mtime":1608156567429,"results":"30","hashOfConfig":"19"},{"size":417,"mtime":1608098478168,"results":"31","hashOfConfig":"19"},{"size":302,"mtime":1608244499182,"results":"32","hashOfConfig":"19"},{"size":802,"mtime":1608241498431,"results":"33","hashOfConfig":"19"},{"size":778,"mtime":1608444798448,"results":"34","hashOfConfig":"19"},{"size":1848,"mtime":1608425813480,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"14hgndi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},"/home/anthony/code/meal-app/react-app/src/index.js",[],["72","73"],"/home/anthony/code/meal-app/react-app/src/reportWebVitals.js",[],"/home/anthony/code/meal-app/react-app/src/App.js",["74"],"/home/anthony/code/meal-app/react-app/src/redux/reducer.js",[],"/home/anthony/code/meal-app/react-app/src/containers/UserContainer.js",[],"/home/anthony/code/meal-app/react-app/src/components/FileReader.js",[],"/home/anthony/code/meal-app/react-app/src/components/UserInput.js",[],"/home/anthony/code/meal-app/react-app/src/components/Meals/Meals.js",[],"/home/anthony/code/meal-app/react-app/src/components/Meals/Meal.js",[],"/home/anthony/code/meal-app/react-app/src/redux/actionCreator.js",[],"/home/anthony/code/meal-app/react-app/src/containers/FoodCards.js",[],"/home/anthony/code/meal-app/react-app/src/redux/foodsReducer.js",[],"/home/anthony/code/meal-app/react-app/src/components/Prediction.js",[],"/home/anthony/code/meal-app/react-app/src/components/Food/FoodCard.js",[],"/home/anthony/code/meal-app/react-app/src/components/Food/FoodPage.js",[],"/home/anthony/code/meal-app/react-app/src/redux/usersReducer.js",[],"/home/anthony/code/meal-app/react-app/src/components/Login.js",["75"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleSignup, handleLogin, signUpForm, loginForm} from '../redux/actionCreator'\n\nconst Login = (props) => {\n    const { signup, toggleSignup, handleLogin, signUpForm, loginForm, form } = props\n    const { username, password, passwordConfirmation } = form\n\n    const onSubmit = (e) => {\n      e.preventDefault()\n      if (signup){\n        if (password == passwordConfirmation){\n          signUpForm({username: username, password: password})\n        } else {\n          alert(\"Those passwords don't match!\")\n        }\n      } else {\n        loginForm({username: username, password: password})\n      }\n    }\n\n    return(\n      \n      <>\n        <h3>{signup ? \"Sign up!\" : \"Login!\"} </h3>\n        <form onSubmit={onSubmit}> \n          <label>\n            Username:\n            <input type=\"text\" name=\"username\"  value={username} onChange={handleLogin} />\n          </label><br/>\n          <label>\n            Password:\n            <input type=\"password\" name=\"password\"  value={password} onChange={handleLogin}/>\n            <input type=\"submit\" value=\"Submit\" />\n          </label><br/>\n          {signup &&\n            <>\n              <label>\n                Password Confirmation:\n                <input type=\"password\" name=\"passwordConfirmation\" value={passwordConfirmation} onChange={handleLogin}  />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </>\n          }\n        </form>\n        <br/>\n        <br/>\n        <button onClick={toggleSignup}>Or... {signup ? \"Login!\" : \"Sign up!\"}</button>\n       \n      </>\n    )\n  }\n\n  const mapStateToProps = (state) => ({\n    signup: state.users.signup,\n    form: state.users.form\n  })\n\n  export default connect(mapStateToProps, { toggleSignup, handleLogin, signUpForm, loginForm} )(Login)",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":13,"column":10,"nodeType":"82","messageId":"83","endLine":13,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":12,"column":22,"nodeType":"86","messageId":"87","endLine":12,"endColumn":24},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]